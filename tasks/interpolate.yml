---
platform: linux
image_resource:
  type: docker-image
  source:
    repository: hairyhenderson/gomplate
    tag: alpine
inputs:
  - name: terraform-output
  # - This must be an initialized git repository.
  # - Note that any changes present in this input
  #   will be committed along with the file copied in
  #   by this task.
  - name: config
  # - This is the input folder containing the file to be committed.
  #   Typically, this will from some other task
  #   with an output that needs to be persisted.
outputs:
  - name: interpolated-config

params:
  ENV_NAME:
  PIVNET_API_TOKEN:
  GCP_AUTH_JSON:
  OM_USERNAME:
  OM_PASSWORD:
  OM_DECRYPTION_PASSPHRASE:
  CLOUD_CONTROLLER_ENCRYPT_KEY:
  MYSQL_EMAIL:
  CREDHUB_KEY_ENCRYPTION_PASSWORD:
  S3_BUCKET:
  S3_ENDPOINT:
  S3_ACCESS_KEY_ID:
  S3_SECRET_ACCESS_KEY:
run:
  path: /bin/sh
  args:
    - -c
    - |
        set -eu
        mkdir -p interpolated-config/$ENV_NAME/config
        mkdir -p interpolated-config/$ENV_NAME/env
        mkdir -p interpolated-config/$ENV_NAME/download-product-configs
        /bin/gomplate --input-dir config/$ENV_NAME/config -d data=file://$(pwd)/terraform-output/metadata?type=application/json --output-dir interpolated-config/$ENV_NAME/config --verbose
        /bin/gomplate -i $'gcp_auth_json: |\n{{env.Getenv "GCP_AUTH_JSON" | strings.Indent 2 }}' -o interpolated-config/$ENV_NAME/config/director-vars.yml --verbose
        /bin/gomplate -i $'gcp_auth_json: |\n{{env.Getenv "GCP_AUTH_JSON" | strings.Indent 2 }}' -o interpolated-config/$ENV_NAME/config/opsman-vars.yml --verbose
        /bin/gomplate -i $'mysql_email: {{env.Getenv "MYSQL_EMAIL"}}\ngcp_auth_json: |\n{{env.Getenv "GCP_AUTH_JSON" | strings.Indent 2 }}' -o interpolated-config/$ENV_NAME/config/mysql-vars.yml --verbose
        /bin/gomplate -i $'cloud_controller_encrypt_key: {{env.Getenv "CLOUD_CONTROLLER_ENCRYPT_KEY"}}\nmysql_email: {{env.Getenv "MYSQL_EMAIL"}}\ncredhub_key_encryption_password: {{env.Getenv "CREDHUB_KEY_ENCRYPTION_PASSWORD"}}' -o interpolated-config/$ENV_NAME/config/cf-vars.yml --verbose
        /bin/gomplate --input-dir config/$ENV_NAME/download-product-configs -d data=file://$(pwd)/terraform-output/metadata?type=application/json --output-dir interpolated-config/$ENV_NAME/download-product-configs --verbose
        /bin/gomplate -f config/$ENV_NAME/env/env.yml -d data=file://$(pwd)/terraform-output/metadata?type=application/json -o interpolated-config/$ENV_NAME/env/env.yml --verbose
